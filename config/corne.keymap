/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

#define DEFAULT 0
#define LOWER   1
#define RAISE   2
#define CONTROL 3
#define MACROS  4

/ {
        macros {
                zed_em_kay: zed_em_kay {
                        label = "ZM_zed_em_kay";
                        compatible = "zmk,behavior-macro";
                        #binding-cells = <0>;
                        bindings
                                = <&macro_press &kp LSHFT>
                                , <&macro_tap &kp Z &kp M &kp K>
                                , <&macro_release &kp LSHFT>
                                ;
                };
                screen_shot: screen_shot {
                        label = "ZM_screen_shot";
                        compatible = "zmk,behavior-macro";
                        #binding-cells = <0>;
                        bindings
                                = <&macro_press &kp LSHFT>
                                , <&macro_press &kp RGUI>
                                , <&macro_tap &kp N4>
                                , <&macro_release &kp LSHFT>
                                , <&macro_release &kp RGUI>
                                ;
                };
        };
        behaviors {
                hm: homerow_mods {
                        compatible = "zmk,behavior-hold-tap";
                        label = "HOMEROW_MODS";
                        #binding-cells = <2>;
                        tapping-term-ms = <300>;
                        quick-tap-ms = <0>;
                        flavor = "tap-preferred";
                        bindings = <&kp>, <&kp>;
                };
                td0: tap_dance_0 {
                        compatible = "zmk,behavior-tap-dance";
                        label = "TAP_DANCE_0";
                        #binding-cells = <0>;
                        tapping-term-ms = <200>;
                        bindings = <&kp SEMI>, <&kp COLON>;
                };
                td1: tap_dance_1 {
                        compatible = "zmk,behavior-tap-dance";
                        label = "TAP_DANCE_1";
                        #binding-cells = <0>;
                        tapping-term-ms = <200>;
                        bindings = <&kp SQT>, <&kp DQT>;
                };
        };
        keymap {
                compatible = "zmk,keymap";
                default_layer {
                        bindings = <
                &kp ESC   &td1  &kp COMMA   &kp DOT     &kp P      &kp Y        &kp F   &kp G      &kp C      &kp R       &kp L &kp BSPC
                &kp TAB   &kp A &hm LCTRL O &hm LALT E  &hm LGUI U &kp I        &kp D   &hm RGUI H &hm RALT T &hm RCTRL N &kp S &kp FSLH
                &kp LSHFT &td0  &kp Q       &kp J       &kp K      &kp X        &kp B   &kp M      &kp W      &kp V       &kp Z &kp CAPS
                                            &to CONTROL &mo LOWER  &kp SPACE    &kp RET &mo RAISE  &sl MACROS
                        >;
                };
                lower_layer {
                        bindings = <
                &kp ESC   &kp N1 &kp N2    &kp N3   &kp N4   &kp N5       &kp N6  &kp N7   &kp N8   &kp N9   &kp N0    &kp BSPC
                &kp TAB   &none  &kp LCTRL &kp LALT &kp LGUI &none        &none   &kp LEFT &kp DOWN &kp UP &kp RIGHT &kp F12
                &kp LSHFT &kp F1 &kp F2    &kp F3   &kp F4   &kp F5       &kp F6  &kp F7   &kp F8   &kp F9   &kp F10   &kp F11
                                            &none    &trans   &kp SPACE    &kp RET &trans   &none
                        >;
                };
                raise_layer {
                        bindings = <
                &kp ESC   &kp EXCL  &kp AT         &kp HASH      &kp DLLR      &kp PRCNT    &kp CARET      &kp AMPS       &kp KP_MULTIPLY &kp LPAR &kp RPAR &kp BSPC
                &kp TAB   &kp UNDER &hm LCTRL PLUS &hm LALT LBRC &hm LGUI RBRC &kp PIPE     &hm RGUI MINUS &hm RALT EQUAL &hm RCTRL LBKT  &kp RBKT &kp BSLH &kp GRAVE
                &kp LSHFT &none     &none          &none         &none         &none        &none          &none          &none           &kp LT   &kp GT   &kp TILDE 
                                                   &none         &trans        &kp SPACE    &kp RET        &trans         &none 
                        >;
                };
                control_layer {
                        bindings = <
                &kp C_BRIGHTNESS_INC &kp C_BRIGHTNESS_DEC &kp C_VOLUME_UP &kp C_VOLUME_DOWN &kp K_MUTE   &none      &kp C_PREVIOUS &kp C_PLAY_PAUSE &kp C_NEXT    &kp C_AL_CALCULATOR &screen_shot &none
                &none                &bt BT_SEL 0         &bt BT_SEL 1    &bt BT_SEL 2      &bt BT_SEL 3 &bt BT_CLR &none          &none            &none         &none               &none &none
                &none                &none                &none           &none             &none        &none      &none          &none            &none         &none               &none &none
                                                                          &to DEFAULT       &none        &none      &none          &none            &to DEFAULT
                        >;
                };
                macros_layer {
                        bindings = <
                &zed_em_kay         &none               &none          &none            &none       &none      &none         &none           &none           &none    &none               &none
                &none               &none               &none          &none            &none       &none      &none         &none           &none           &none    &none               &none
                &none               &none               &none          &none            &none       &none      &none         &none           &none           &none    &none               &none
                                                                       &to DEFAULT      &none       &none      &none         &none           &to DEFAULT
                        >;
                };

        };
};