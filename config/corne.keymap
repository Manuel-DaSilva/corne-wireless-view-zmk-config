/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

/ {
        behaviors {
                hm: homerow_mods {
                        compatible = "zmk,behavior-hold-tap";
                        label = "HOMEROW_MODS";
                        #binding-cells = <2>;
                        tapping-term-ms = <300>;
                        quick-tap-ms = <0>;
                        flavor = "tap-preferred";
                        bindings = <&kp>, <&kp>;
                };
                td0: tap_dance_0 {
                        compatible = "zmk,behavior-tap-dance";
                        label = "TAP_DANCE_0";
                        #binding-cells = <0>;
                        tapping-term-ms = <200>;
                        bindings = <&kp SEMI>, <&kp COLON>;
                };
                td1: tap_dance_1 {
                        compatible = "zmk,behavior-tap-dance";
                        label = "TAP_DANCE_1";
                        #binding-cells = <0>;
                        tapping-term-ms = <200>;
                        bindings = <&kp SQT>, <&kp DQT>;
                };
        };
        keymap {
                compatible = "zmk,keymap";
                default_layer {
                        bindings = <
                &kp TAB        &td1  &kp COMMA &kp DOT    &kp P      &kp Y      &kp F   &kp G      &kp C      &kp R &kp L &kp BSPC
                &kp LCTRL      &kp A &kp O     &hm LALT E &hm RGUI U &kp I      &kp D   &hm RGUI H &hm LALT T &kp N &kp S &kp FSLH
                &hm LSHFT CAPS &td0  &kp Q     &kp J      &kp K      &kp X      &kp B   &kp M      &kp W      &kp V &kp Z &kp ESC
                                               &to 3      &mo 1      &kp SPACE  &kp RET &mo 2      &to 4
                        >;
                };
                lower_layer {
                        bindings = <
                &kp TAB        &kp N1 &kp N2 &kp N3    &kp N4 &kp N5      &kp N6   &kp N7   &kp N8   &kp N9    &kp N0  &kp BSPC
                &kp LCTRL      &trans &trans &trans    &trans &trans      &kp LEFT &kp DOWN &kp UP   &kp RIGHT &kp F11 &kp F12
                &hm LSHFT CAPS &kp F1 &kp F2 &kp F3    &kp F4 &kp F5      &kp F6   &kp F7   &kp F8   &kp F9    &kp F10 &kp ESC
                                             &kp LCTRL &trans &kp SPACE   &kp RET  &trans   &kp RGUI 
                        >;
                };
                raise_layer {
                        bindings = <
                &kp TAB         &kp EXCL &kp AT &kp HASH  &kp DLLR &kp PRCNT &kp CARET &kp AMPS  &kp KP_MULTIPLY &kp LPAR &kp RPAR &kp BSPC
                &kp LCTRL       &trans   &trans &trans    &kp LT   &kp GT    &kp MINUS &kp EQUAL &kp LBKT        &kp RBKT &kp BSLH &kp GRAVE
                &hm LSHFT CAPS  &trans   &trans &trans    &trans   &trans    &kp UNDER &kp PLUS  &kp LBRC        &kp RBRC &kp PIPE &kp TILDE
                                                &kp LCTRL &trans   &kp SPACE &kp RET   &trans    &kp RGUI 
                        >;
                };
                control_layer {
                        bindings = <
                &kp C_BRIGHTNESS_INC &kp C_BRIGHTNESS_DEC &kp C_VOLUME_UP &kp C_VOLUME_DOWN &kp K_MUTE   &trans      &kp C_PREVIOUS &kp C_PLAY_PAUSE &kp C_NEXT    &kp C_AL_CALCULATOR &trans  &trans
                &trans               &bt BT_SEL 0         &bt BT_SEL 1    &bt BT_SEL 2      &bt BT_SEL 3 &bt BT_CLR  &trans         &trans           &trans        &trans &trans               &trans
                &trans               &trans               &trans          &trans            &trans       &trans      &trans         &trans           &trans        &trans &trans               &trans
                                                                          &to 0             &trans       &trans      &trans         &trans           &to 0
                        >;
                macros_layer {
                        bindings = <
                &trans               &trans               &trans          &trans            &trans       &trans      &trans         &trans           &trans        &trans &trans               &trans
                &trans               &trans               &trans          &trans            &trans       &trans      &trans         &trans           &trans        &trans &trans               &trans
                &trans               &trans               &trans          &trans            &trans       &trans      &trans         &trans           &trans        &trans &trans               &trans
                                                                          &to 0             &trans       &trans      &trans         &trans           &to 0
                        >;

        };
};